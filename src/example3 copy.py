import time
import os
from manuscript.recognizers import TRBAInfer

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
image_dir = (
    r"C:\shared\Archive_19_04\data_cyrillic\test"  # üü¢ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
)
batch_size = 16

# === –°–∫–∞–Ω–∏—Ä—É–µ–º –ø–∞–ø–∫—É ===
valid_ext = {".png", ".jpg", ".jpeg", ".tif", ".tiff", ".bmp"}
images = [
    os.path.join(image_dir, f)
    for f in os.listdir(image_dir)
    if os.path.splitext(f)[1].lower() in valid_ext
]

if not images:
    raise RuntimeError(f"‚ùå –í –ø–∞–ø–∫–µ {image_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")

print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ ===
recognizer = TRBAInfer(
    model_path=r"C:\shared\exp1_model_64\best_acc_ckpt.pth",
    config_path=r"C:\shared\exp1_model_64\config.json",
)

# === –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è ===
start_time = time.perf_counter()
res = recognizer.predict(images=images, batch_size=batch_size)
end_time = time.perf_counter()

# === –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
total_time = end_time - start_time
avg_time = total_time / len(images)
fps = 1.0 / avg_time if avg_time > 0 else float("inf")

print("\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è ===")
for path, (text, score) in zip(images, res):
    print(f"{os.path.basename(path):40s} ‚Üí {text:20s}  ({score:.4f})")

print(f"\nProcessed {len(images)} images in {total_time:.3f} sec")
print(f"Average per image: {avg_time:.3f} sec ({fps:.1f} FPS)")
